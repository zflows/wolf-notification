-- Generated by Oracle SQL Developer Data Modeler 20.4.1.406.0906
--   at:        2021-07-25 19:34:15 EDT
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE generated_message (
    message_id  CHAR 
--  WARNING: CHAR size not specified 
     NOT NULL,
    subject     NVARCHAR2(4000),
    body        NVARCHAR2(4000)
)
LOGGING;

ALTER TABLE generated_message ADD constraint "[notif].[generated_message]" CHECK ( constraint[fk_generated_message_message])
;
ALTER TABLE generated_message ADD CONSTRAINT pk_generated_message PRIMARY KEY ( message_id );

CREATE TABLE message (
    message_id         CHAR 
--  WARNING: CHAR size not specified 
     DEFAULT ( newid() ) NOT NULL,
    template_id        CHAR 
--  WARNING: CHAR size not specified 
     NOT NULL,
    token_data         NVARCHAR2(4000),
    date_created       DATE DEFAULT ( getdate() ) NOT NULL,
    date_processed     DATE,
    date_sent          DATE,
    provider_code      VARCHAR2(256) NOT NULL,
    from_recipient_id  INTEGER NOT NULL
)
LOGGING;

ALTER TABLE message ADD constraint "[notif].[message]" CHECK ( constraint[fk_message_provider])
;


ALTER TABLE message 
    ADD CONSTRAINT "[notif].[message]v1" 
    CHECK (CONSTRAINT [FK_message_recipient])
;


ALTER TABLE message add constraint "[notif].[message]v2"
 check ( constraint[message_template_template_id_fk])
;
ALTER TABLE message ADD CONSTRAINT message_pk PRIMARY KEY ( message_id );

CREATE TABLE message_recipient (
    mr_id         INTEGER NOT NULL,
    message_id    CHAR 
--  WARNING: CHAR size not specified 
     NOT NULL,
    recipient_id  INTEGER NOT NULL,
    type_code     VARCHAR2(25)
)
LOGGING;

ALTER TABLE message_recipient ADD constraint "[notif].[message_recipient]" CHECK ( constraint[fk_message_recipient_message])
;


ALTER TABLE message_recipient 
    ADD CONSTRAINT "[notif].[message_recipient]v1" 
    CHECK (CONSTRAINT [FK_message_recipient_recipient])
;


ALTER TABLE message_recipient
 add constraint "[notif].[message_recipient]v2" check ( constraint[fk_message_recipient_recipient_type])
;
ALTER TABLE message_recipient ADD CONSTRAINT pk_message_recipient PRIMARY KEY ( mr_id );

CREATE TABLE provider (
    provider_code  VARCHAR2(256) NOT NULL,
    description    NVARCHAR2(4000)
)
LOGGING;

ALTER TABLE provider ADD CONSTRAINT pk_provider PRIMARY KEY ( provider_code );

CREATE TABLE recipient (
    recipient_id  INTEGER NOT NULL,
    address       NVARCHAR2(1024) NOT NULL,
    name          NVARCHAR2(1024)
)
LOGGING;

ALTER TABLE recipient ADD CONSTRAINT pk_recipient PRIMARY KEY ( recipient_id );

CREATE TABLE recipient_type (
    type_code    VARCHAR2(25) NOT NULL,
    description  NVARCHAR2(4000)
)
LOGGING;

ALTER TABLE recipient_type ADD CONSTRAINT pk_recipient_type PRIMARY KEY ( type_code );

CREATE TABLE template (
    template_id                CHAR 
--  WARNING: CHAR size not specified 
     NOT NULL,
    template_name              VARCHAR2(512) NOT NULL,
    template_subject           NVARCHAR2(4000),
    template_body              NVARCHAR2(4000),
    default_provider_code      VARCHAR2(256),
    default_from_recipient_id  INTEGER
)
LOGGING;

ALTER TABLE template ADD constraint "[notif].[template]" CHECK ( constraint[fk_template_provider])
;


ALTER TABLE template add constraint "[notif].[template]v1"
 check ( constraint[fk_template_recipient])
;
ALTER TABLE template ADD CONSTRAINT pk_template PRIMARY KEY ( template_id );

ALTER TABLE template ADD CONSTRAINT iu_template UNIQUE ( template_name );

CREATE TABLE template_recipient (
    tr_id         INTEGER NOT NULL,
    template_id   CHAR 
--  WARNING: CHAR size not specified 
     NOT NULL,
    recipient_id  INTEGER NOT NULL,
    type_code     VARCHAR2(25) NOT NULL
)
LOGGING;

ALTER TABLE template_recipient ADD constraint "[notif].[template_recipient]" CHECK ( constraint[fk_template_recipient_recipient])
;


ALTER TABLE template_recipient 
    ADD CONSTRAINT "[notif].[template_recipient]v1" 
    CHECK (CONSTRAINT [FK_template_recipient_recipient_type])
;


ALTER TABLE template_recipient
 add constraint "[notif].[template_recipient]v2" check ( constraint[fk_template_recipient_template])
;
ALTER TABLE template_recipient ADD CONSTRAINT pk_template_recipient PRIMARY KEY ( tr_id );

ALTER TABLE generated_message
    ADD CONSTRAINT fk_generated_message_message FOREIGN KEY ( message_id )
        REFERENCES message ( message_id )
    NOT DEFERRABLE;

ALTER TABLE message
    ADD CONSTRAINT fk_message_provider FOREIGN KEY ( provider_code )
        REFERENCES provider ( provider_code )
    NOT DEFERRABLE;

ALTER TABLE message
    ADD CONSTRAINT fk_message_recipient FOREIGN KEY ( from_recipient_id )
        REFERENCES recipient ( recipient_id )
    NOT DEFERRABLE;

ALTER TABLE message_recipient
    ADD CONSTRAINT fk_message_recipient_message FOREIGN KEY ( message_id )
        REFERENCES message ( message_id )
    NOT DEFERRABLE;

ALTER TABLE message_recipient
    ADD CONSTRAINT fk_message_recipient_recipient FOREIGN KEY ( recipient_id )
        REFERENCES recipient ( recipient_id )
    NOT DEFERRABLE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE message_recipient
    ADD CONSTRAINT fk_message_recipient_recipient_type FOREIGN KEY ( type_code )
        REFERENCES recipient_type ( type_code )
    NOT DEFERRABLE;

ALTER TABLE template_recipient
    ADD CONSTRAINT fk_templ_recip_recip FOREIGN KEY ( recipient_id )
        REFERENCES recipient ( recipient_id )
    NOT DEFERRABLE;

ALTER TABLE template_recipient
    ADD CONSTRAINT fk_templ_recip_recip_type FOREIGN KEY ( type_code )
        REFERENCES recipient_type ( type_code )
    NOT DEFERRABLE;

ALTER TABLE template
    ADD CONSTRAINT fk_template_provider FOREIGN KEY ( default_provider_code )
        REFERENCES provider ( provider_code )
    NOT DEFERRABLE;

ALTER TABLE template
    ADD CONSTRAINT fk_template_recipient FOREIGN KEY ( default_from_recipient_id )
        REFERENCES recipient ( recipient_id )
    NOT DEFERRABLE;

ALTER TABLE template_recipient
    ADD CONSTRAINT fk_template_recipient_template FOREIGN KEY ( template_id )
        REFERENCES template ( template_id )
    NOT DEFERRABLE;

ALTER TABLE message
    ADD CONSTRAINT message_template_id_fk FOREIGN KEY ( template_id )
        REFERENCES template ( template_id )
    NOT DEFERRABLE;

CREATE SEQUENCE message_recipient_mr_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER message_recipient_mr_id_trg BEFORE
    INSERT ON message_recipient
    FOR EACH ROW
    WHEN ( new.mr_id IS NULL )
BEGIN
    :new.mr_id := message_recipient_mr_id_seq.nextval;
END;
/

CREATE SEQUENCE recipient_recipient_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER recipient_recipient_id_trg BEFORE
    INSERT ON recipient
    FOR EACH ROW
    WHEN ( new.recipient_id IS NULL )
BEGIN
    :new.recipient_id := recipient_recipient_id_seq.nextval;
END;
/

CREATE SEQUENCE template_recipient_tr_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER template_recipient_tr_id_trg BEFORE
    INSERT ON template_recipient
    FOR EACH ROW
    WHEN ( new.tr_id IS NULL )
BEGIN
    :new.tr_id := template_recipient_tr_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             8
-- CREATE INDEX                             0
-- ALTER TABLE                             33
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           3
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          3
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   1
-- WARNINGS                                 6
